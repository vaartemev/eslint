{
  "parserOptions": {
    "ecmaVersion": 6,
    "sourceType": "module"
  },
  "env": {
    "es6": true
  },
  "rules": {
    "brace-style": [2, "1tbs"],
    "camelcase": [2, { "properties": "always" }],
    "comma-spacing": [2, { "after": true, "before": false }],
    "comma-style": [2, "last"],
    "computed-property-spacing": [2, "never"],
    "eol-last": [2, "always"],
    "func-names": [1, "always"],
    "implicit-arrow-linebreak": [2, "below"],
    "indent": [2, 4],
    "keyword-spacing": [2, { "before": true, "after": true }],
    "max-len": [2, { "code": 80, "ignoreComments": true, "ignoreStrings": true }],
    "new-parens": 2,
    "no-mixed-spaces-and-tabs": 2,
    "no-multi-assign": 2,
    "no-multiple-empty-lines": [2, {"max": 1, "maxEOF": 1}],
    "no-new-object": 2,
    "no-plusplus": 2,
    "no-restricted-syntax": [
      2,
      {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object. {keys,values,entries}, and iterate over the resulting array."
      }
    ],
    "no-spaced-func": 2,
    "no-tabs": 2,
    "no-underscore-dangle": 2,
    "nonblock-statement-body-position": [2, "beside"],
    "padded-blocks": [2, "never"],
    "quotes": [2, "single"],
    "semi": [2, "always"],
    "semi-spacing": [2, { "before": false, "after": true }],
    "semi-style": [2, "last"],
    "space-before-blocks": [2, "always"],
    "space-before-function-paren": [2, {"anonymous": "always", "named": "ignore", "asyncArrow": "always"}],
    "space-in-parens": [2, "never"],
    "space-infix-ops": 2,
    "space-unary-ops": [2, {"words": true, "nonwords": false}],
    "spaced-comment": [2, "always"]
  }
}